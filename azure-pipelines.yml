# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
    exclude:
      - doc/*
  paths:
    exclude:
      - src/README.md
      - src/doc/*

schedules:
  - cron: "0 */12 * * *"
    displayName: Daily build
    branches:
      include:
        - master
    always: true

pr:
  - master

pool: 'contabo'

steps:
  - script: |
      echo Agent.TempDirectory is: $(Agent.TempDirectory)
      echo Agent.BuildDirectory is: $(Agent.BuildDirectory)
      echo Build.SourceBranchName is: $(Build.SourceBranchName)
      echo System.PullRequest.PullRequestId is: $(System.PullRequest.PullRequestId)
      echo System.PullRequest.PullRequestNumber is: $(System.PullRequest.PullRequestNumber)
      echo System.PullRequest.SourceBranch is: $(System.PullRequest.SourceBranch)
    displayName: "Dump variables"

  - script: |
      dotnet new tool-manifest
      dotnet tool install --local JetBrains.dotCover.GlobalTool
      dotnet tool install --local dotnet-sonarscanner
    displayName: "Install dotCover tools"

  - script: |
      dotnet sonarscanner begin \
      /k:"DigitalLibrary" \
      /d:sonar.host.url=$(sonar.host.url) \
      /d:sonar.login=$(sonar.login) \
      /o:$(sonar.organization) \
      /s:../s/src/sonar.xml \
      /d:sonar.pullrequest.key=$(System.PullRequest.PullRequestNumber) \
      /d:sonar.pullrequest.branch=$(System.PullRequest.SourceBranch) \
      /d:sonar.pullrequest.base=master
    displayName: "Sonar begin"

  - task: DotNetCoreCLI@2
    displayName: 'Restoring...'
    inputs:
      command: 'restore'
      projects: 'src/DigitalLibrary.sln'
      feedsToUse: 'select'
      noCache: false

  - task: DotNetCoreCLI@2
    displayName: 'Building...'
    inputs:
      command: 'build'
      projects: 'src/DigitalLibrary.sln'
      arguments: '-c Debug'

  - script: |
      dotnet dotcover test \
      --no-build \
      --dotCoverReportType=html
    workingDirectory: src
    displayName: "dotCover"
    
  - script: |
      dotnet test --no-build
    workingDirectory: src
    displayName: "Test for Sonar"

  - task: DotNetCoreCLI@2
    displayName: 'Testing and publish result...'
    inputs:
      command: 'test'
      projects: 'src/DigitalLibrary.sln'
      arguments: '--no-build'

  - script: |
      dotnet sonarscanner end /d:sonar.login=$(sonar.login)
    displayName: "Sonar end"