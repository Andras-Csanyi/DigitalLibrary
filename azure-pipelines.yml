# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
    exclude:
      - doc/*
  paths:
    exclude:
      - src/README.md
      - src/doc/*

pr:
  - master

pool: 'contabo'

steps:
  
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'sonarcloud'
      organization: 'andras-csanyi'
      scannerMode: 'CLI'
      configMode: 'file'
      extraProperties: |
        sonar.exclusions=**/obj/**,**/*.dll
        sonar.cs.xunit.reportsPaths=${Agent.TempDirectory}/**/XUnit.TestResults.xml
        sonar.cs.opencover.reportsPaths=${Agent.TempDirectory}/**/opencoverCoverage.xml

  - task: DotNetCoreCLI@2
    displayName: 'Restoring...'
    inputs:
      command: 'restore'
      projects: 'src/DigitalLibrary.sln'
      feedsToUse: 'select'
      verbosityRestore: 'Normal'

  - task: DotNetCoreCLI@2
    displayName: 'Building...'
    inputs:
      command: 'build'
      projects: 'src/DigitalLibrary.sln'
      arguments: '-c Debug'

  - task: DotNetCoreCLI@2
    displayName: 'Testing...'
    inputs:
      command: 'test'
      projects: 'src/DigitalLibrary.sln'
      arguments: "--no-build \
        /p:CollectCoverage=true \
        /p:ExcludeByAttribute='Obsolete*%2cGeneratedCodeAttribute*%2cCompilerGeneratedAttribute' \
        /p:CoverletOutputFormat=cobertura"
      publishTestResults: true

  - task: DotNetCoreCLI@2
    displayName: 'Testing...'
    inputs:
      command: 'test'
      projects: 'src/DigitalLibrary.sln'
      arguments: "--no-build \
        /p:CollectCoverage=true \
        /p:ExcludeByAttribute='Obsolete*%2cGeneratedCodeAttribute*%2cCompilerGeneratedAttribute' \
        /p:CoverletOutputFormat=opencover
        /p:CoverletOutput=$(Agent.TempDirectory)/coverage/
        /p:MergeWith=$(Agent.TempDirectory)/coverage/ --collect \"Code coverage\""
      publishTestResults: true

  - task: PublishTestResults@2
    displayName: "Publish Test Results"
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: "$(Agent.TempDirectory)/**.*trx"
      mergeTestResults: true
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    displayName: 'Coverage...'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/**/coverage.cobertura.xml'
      pathToSources: '$(System.DefaultWorkingDirectory)/src'

  - script: |
      bash <(curl -s https://codecov.io/bash) -v
    displayName: 'Uploading to Codecov.io'

  - task: SonarCloudAnalyze@1

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'

  

  # - script: |
  #     dotnet sonarscanner begin /o:andras-csanyi /k:Andras-Csanyi_DigitalLibrary /d:sonar.host.url=https://sonarcloud.io
  #   displayName: 'Sonar begin phase'

  # - script: |
  #     dotnet build 'src/DigitalLibrary.sln'
  #   displayName: 'Sonar build phase'

  # - script: |
  #     dotnet sonarscanner end
  #   displayName: 'Sonar end phase'