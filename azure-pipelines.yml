# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
    exclude:
      - doc/*
  paths:
    exclude:
      - src/README.md
      - src/doc/*

schedules:
  - cron: "0 */12 * * *"
    displayName: Daily build
    branches:
      include:
        - master
    always: true

pr:
  - master

pool: 'contabo'

steps:
  - script: |
      echo Agent.TempDirectory is: $(Agent.TempDirectory)
      echo Agent.BuildDirectory is: $(Agent.BuildDirectory)
      echo Build.SourceBranchName is: $(Build.SourceBranchName)
      echo System.PullRequest.PullRequestId is: $(System.PullRequest.PullRequestId)
    displayName: "Dump variables"

  - script: |
      dotnet new tool-manifest
      dotnet tool install --local JetBrains.dotCover.GlobalTool
      dotnet tool install --local dotnet-sonarscanner
    displayName: "Install dotCover tools"
  #
  #  - task: SonarCloudPrepare@1
  #    inputs:
  #      SonarCloud: 'sonarcloud'
  #      organization: 'andras-csanyi'
  #      scannerMode: 'CLI'
  #      configMode: 'manual'
  #      cliProjectKey: 'DigitalLibrary'
  #      cliProjectName: 'DigitalLibrary'
  #      cliSources: '.'
  #      extraProperties: |
  #        sonar.coverage.exclusions=**/obj/**/*, **/*.dll, src/MasterData/MasterData.BusinessLogic.Features.Tests/**/*,src/MasterData/MasterData.BusinessLogic.ViewModels.Unit.Tests/**/*, src/MasterData/MasterData.BusinessLogic.Tests.Integration/**/*, src/MasterData/MasterData.Controllers.Integration.Tests/**/*, src/MasterData/MasterData.Controllers.Unit.Tests/**/*, src/MasterData/MasterData.Validators.Test/**/*, src/MasterData/MasterData.Tests.TestData/**/*, src/MasterData/MasterData.DomainModel.Unit.Tests/**/*, src/MasterData/MasterData.StepDefinitions/**/*, src/MasterData/MasterData.Web.Api.Features.Tests/**/*, src/Utils/Guard.Tests/**/*, src/ControlPanel/ControlPanel.BusinessLogic.Implementations.Unit.Tests/**/*, src/ControlPanel/ControlPanel.WebApi.Client.Unit.Tests/**/*, src/Utils/ControlPanel.DataSample/**/*, src/Utils/TestHelper.Unit.Test/**/*, src/Utils/Guard.Tests/**/*, src/IntegrationTestFactories/**/*, src/MasterDataTestHelper/**/*
  #        sonar.cs.xunit.reportsPaths=$(Agent.TempDirectory)/**.*trx
  #        sonar.cs.dotcover.reportsPaths=$(Agent.BuildDirectory)/s/src/coverageReport/*.xml

  - script: |
      dotnet sonarscanner begin \
      /k:"DigitalLibrary" \
      /d:sonar.host.url=$(sonar.host.url) \
      /d:sonar.login=$(sonar.login) \
      /o:$(sonar.organization) \
      /s:../s/src/sonar.xml
      /d:sonar.pullrequest.key=$(System.PullRequest.PullRequestId) \
      /d:sonar.pullrequest.branch=$(Build.SourceBranchName)
    displayName: "Sonar begin"

  - task: DotNetCoreCLI@2
    displayName: 'Restoring...'
    inputs:
      command: 'restore'
      projects: 'src/DigitalLibrary.sln'
      feedsToUse: 'select'
      noCache: false

  - task: DotNetCoreCLI@2
    displayName: 'Building...'
    inputs:
      command: 'build'
      projects: 'src/DigitalLibrary.sln'
      arguments: '-c Debug'

  - script: |
      dotnet dotcover test \
      --no-build \
      --dotCoverReportType=html
    workingDirectory: src
    displayName: "dotCover"

  - task: DotNetCoreCLI@2
    displayName: 'Testing and publish result...'
    inputs:
      command: 'test'
      projects: 'src/DigitalLibrary.sln'
      arguments: '--no-build'

  - script: |
      dotnet sonarscanner end /d:sonar.login=$(sonar.login)
    displayName: "Sonar end"
