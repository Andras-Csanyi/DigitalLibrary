@using DigitalLibrary.MasterData.DomainModel
<div>
    @{
        if (SourceFormatBuilderService?.SourceFormat?.RootDimensionStructure != null)
        {
            <BSCard>
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">@SourceFormatBuilderService.SourceFormat.Name</BSCard>
                    @* <BSCard CardType="CardType.Subtitle">@_selectedSourceFormat.Desc</BSCard> *@
                    @{
                        if (SourceFormatBuilderService.SourceFormat.RootDimensionStructure != null)
                        {
                            <DimensionStructureTree
                                DimensionStructureParameter="@SourceFormatBuilderService.SourceFormat.RootDimensionStructure">
                            </DimensionStructureTree>
                        }
                        else
                        {
                            <BSCard CardType="CardType.Title">
                                <div class="float-left">
                                    <strong>Root Dimension Structure: &nbsp;</strong>
                                    -- not selected yet --
                                </div>
                                <div class="float-right">
                                    <BSButton ButtonType="ButtonType.Button"
                                              Color="Color.Primary"
                                              @onclick="@(async () => await SelectRootDimensionStructure()
                                                            .ConfigureAwait(false))">
                                        Select
                                    </BSButton>
                                </div>
                            </BSCard>
                        }
                    }
                </BSCard>
            </BSCard>
        }
        else
        {
            <BSCard>
                <BSCard CardType="CardType.Title">RootDimension</BSCard>
                <BSCard CardType="CardType.Body">

                    @{
                        if (SourceFormatBuilderService.SourceFormat != null)
                        {
                            <BSButton Size="Size.Small"
                                      ButtonType="ButtonType.Button"
                                      Color="Color.Primary"
                                      @onclick="@(async () => await SelectRootDimensionStructure().ConfigureAwait(false))">
                                Add Existing RootDimensionStructure
                            </BSButton>
                            <BSButton Size="Size.Small"
                                      ButtonType="ButtonType.Button"
                                      Color="Color.Primary"
                                      @onclick="@(async () => await AddNewRootDimensionStructureAsync().ConfigureAwait(false))">
                                Add New RootDimensionStructure
                            </BSButton>
                        }
                    }

                </BSCard>
            </BSCard>
        }
    }
</div>

<BSModal @ref="_addNewRootDimensionStructureForm">
    <BSForm Model="@_newRootDimensionStructure"
            ValidateOnInit="true"
            OnValidSubmit="@(async () => await SaveNewRootDimensionStructureHandlerAsync().ConfigureAwait(false))">
        @* <DataAnnotationsValidator/> *@
        @* <ValidationSummary/> *@
        <BSModalHeader
            @onclick="@(async () => await CancelAddNewRootDimensionStructureAsync().ConfigureAwait(false))">
            Adding new Dimension Structure
        </BSModalHeader>
        <BSModalBody>
            <BSFormGroup>
                <BSFormLabel>Id</BSFormLabel>
                <BSBasicInput InputType="InputType.Text"
                              IsDisabled="true"
                              @bind-Value="@_newRootDimensionStructure.Id">
                    @_newRootDimensionStructure.Id
                </BSBasicInput>
            </BSFormGroup>
            <BSFormGroup>
                <BSFormLabel>Name</BSFormLabel>
                <BSInput InputType="InputType.Text"
                         @bind-Value="@_newRootDimensionStructure.Name">
                    @_newRootDimensionStructure.Name
                </BSInput>
            </BSFormGroup>
            <BSFormGroup>
                <BSFormLabel>Description</BSFormLabel>
                <BSInput InputType="InputType.TextArea"
                         @bind-Value="@_newRootDimensionStructure.Desc">
                    @_newRootDimensionStructure.Desc
                </BSInput>
            </BSFormGroup>
            <BSFormGroup>
                <BSFormLabel>Parent Dimension Structure</BSFormLabel>
                @*                 <BSInput InputType="InputType.Select" *@
                @*                          @bind-Value="@_newDimensionStructure.ParentDimensionStructureId"> *@
                @*                     @{ *@
                @*                         foreach (DimensionStructure topDimensionStructure in _topDimensionStructures) *@
                @*                         { *@
                @*                             <option value="@topDimensionStructure.Id"> *@
                @*                                 @topDimensionStructure.Name *@
                @*                             </option> *@
                @*                         } *@
                @*                     } *@
                @*                 </BSInput> *@
            </BSFormGroup>
            <BSFormGroup>
                <BSFormLabel>Dimension</BSFormLabel>
                <BSInput InputType="InputType.Select"
                         @bind-Value="@_newRootDimensionStructure.DimensionId">
                    @{
                        foreach (Dimension dimension in _dimensions)
                        {
                            <option value="@dimension.Id">
                                @dimension.Name
                            </option>
                        }
                    }
                </BSInput>
            </BSFormGroup>
            <BSFormGroup>
                <BSFormLabel>Is Active?</BSFormLabel>
                <BSInput InputType="InputType.Range"
                         min="0"
                         max="1"
                         @bind-Value="@_newRootDimensionStructure.IsActive">
                    @_newRootDimensionStructure.IsActive
                </BSInput>
            </BSFormGroup>
        </BSModalBody>
        <BSModalFooter>
            <BSButton ButtonType="ButtonType.Button"
                      @onclick="@(async () => await CancelAddNewRootDimensionStructureAsync().ConfigureAwait(false))"
                      Color="Color.Secondary">
                Cancel
            </BSButton>
            <BSButton ButtonType="ButtonType.Submit"
                      Color="Color.Primary">
                Save
            </BSButton>
        </BSModalFooter>
    </BSForm>
</BSModal>

<BSModal @ref="_rootDimensionStructureListModal" IsCentered="true" Size="Size.Large">
    <BSModalHeader OnClick="@(async () => await CancelRootDimensionStructureSelectAsync().ConfigureAwait(false))">
        Selet a root Dimension Structure for the SourceFormat.
    </BSModalHeader>
    <BSModalBody>
        <BSTable>
            <BSTableHead>
                <BSTableHeadCell>Id</BSTableHeadCell>
                <BSTableHeadCell>Name</BSTableHeadCell>
                <BSTableHeadCell>Desc</BSTableHeadCell>
                <BSTableHeadCell></BSTableHeadCell>
            </BSTableHead>
            <BSTableBody>
                @{
                    if (_rootDimensionStructureList != null)
                    {
                        foreach (DimensionStructure dimensionStructure in _rootDimensionStructureList)
                        {
                            <BSTableRow>
                                <BSTableCell>
                                    @dimensionStructure.Id
                                </BSTableCell>
                                <BSTableCell>
                                    @dimensionStructure.Name
                                </BSTableCell>
                                <BSTableCell>
                                    @dimensionStructure.Desc</BSTableCell>
                                <BSTableCell>
                                    <BSButton ButtonType="ButtonType.Button"
                                              Color="Color.Primary"
                                              @onclick="@(async () => await SelectRootDimensionStructureHandler(
                                                            dimensionStructure.Id).ConfigureAwait(false))">
                                        Select
                                    </BSButton>
                                </BSTableCell>
                            </BSTableRow>
                        }
                    }
                }
            </BSTableBody>
        </BSTable>
    </BSModalBody>
    <BSModalFooter>
        @{
            if (_rootDimensionStructureListRaw.Count > pageSize)
            {
                <div>
                    <BSButton ButtonType="ButtonType.Button"
                              Color="Color.Primary"
                              Size="Size.Small"
                              @onclick="@(async () => await ShowFirstPagePagerAction().ConfigureAwait(false))">
                        First
                    </BSButton>
                    <BSButton ButtonType="ButtonType.Button"
                              Color="Color.Primary"
                              Size="Size.Small"
                              @onclick="@(async () => await PageBackOnePagePagerAction().ConfigureAwait(false))">
                        &larr;
                    </BSButton>
                    <BSButton ButtonType="ButtonType.Button"
                              Color="Color.Primary"
                              Size="Size.Small"
                              @onclick="@(async () => await PageForwardOnePagePagerAction().ConfigureAwait(false))">
                        &rarr;
                    </BSButton>
                    <BSButton ButtonType="ButtonType.Button"
                              Color="Color.Primary"
                              Size="Size.Small"
                              @onclick="@(async () => await ShowLastPagePagerAction().ConfigureAwait(false))">
                        Last
                    </BSButton>
                </div>
            }
        }


    </BSModalFooter>
</BSModal>